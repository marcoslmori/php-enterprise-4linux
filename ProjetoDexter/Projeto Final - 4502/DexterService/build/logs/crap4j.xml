<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2015-07-15 21:46:36</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>249</methodCount>
    <crapMethodCount>0</crapMethodCount>
    <crapLoad>0</crapLoad>
    <totalCrap>459.77</totalCrap>
    <crapMethodPercent>0</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package/>
      <className>ClienteController</className>
      <methodName>getAction</methodName>
      <methodSignature>getAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>getAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ClienteController</className>
      <methodName>postAction</methodName>
      <methodSignature>postAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>postAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ClienteController</className>
      <methodName>putAction</methodName>
      <methodSignature>putAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>putAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ClienteController</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2.26</crap>
      <complexity>2</complexity>
      <coverage>60</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ClienteController</className>
      <methodName>setService</methodName>
      <methodSignature>setService(Service\Cliente $service)</methodSignature>
      <fullMethod>setService(Service\Cliente $service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ContatoController</className>
      <methodName>postAction</methodName>
      <methodSignature>postAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>postAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ContatoController</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ContatoController</className>
      <methodName>setService</methodName>
      <methodSignature>setService(Service\Contato $service)</methodSignature>
      <fullMethod>setService(Service\Contato $service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>DestaqueController</className>
      <methodName>getAction</methodName>
      <methodSignature>getAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>getAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>DestaqueController</className>
      <methodName>postAction</methodName>
      <methodSignature>postAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>postAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>DestaqueController</className>
      <methodName>putAction</methodName>
      <methodSignature>putAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>putAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>DestaqueController</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>DestaqueController</className>
      <methodName>setService</methodName>
      <methodSignature>setService(Service\Destaque $service)</methodSignature>
      <fullMethod>setService(Service\Destaque $service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>EstadoController</className>
      <methodName>getAction</methodName>
      <methodSignature>getAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>getAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>EstadoController</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>EstadoController</className>
      <methodName>setService</methodName>
      <methodSignature>setService(Service\Estado $service)</methodSignature>
      <fullMethod>setService(Service\Estado $service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>FuncionalidadeController</className>
      <methodName>getAction</methodName>
      <methodSignature>getAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>getAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>FuncionalidadeController</className>
      <methodName>postAction</methodName>
      <methodSignature>postAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>postAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>FuncionalidadeController</className>
      <methodName>putAction</methodName>
      <methodSignature>putAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>putAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>FuncionalidadeController</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>FuncionalidadeController</className>
      <methodName>setService</methodName>
      <methodSignature>setService(Service\Funcionalidade $service)</methodSignature>
      <fullMethod>setService(Service\Funcionalidade $service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>MensagemController</className>
      <methodName>getAction</methodName>
      <methodSignature>getAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>getAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>MensagemController</className>
      <methodName>postAction</methodName>
      <methodSignature>postAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>postAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>MensagemController</className>
      <methodName>putAction</methodName>
      <methodSignature>putAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>putAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>MensagemController</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>MensagemController</className>
      <methodName>setService</methodName>
      <methodSignature>setService(Service\Mensagem $service)</methodSignature>
      <fullMethod>setService(Service\Mensagem $service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ServicoController</className>
      <methodName>getAction</methodName>
      <methodSignature>getAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>getAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ServicoController</className>
      <methodName>postAction</methodName>
      <methodSignature>postAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>postAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ServicoController</className>
      <methodName>putAction</methodName>
      <methodSignature>putAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>putAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ServicoController</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ServicoController</className>
      <methodName>setService</methodName>
      <methodSignature>setService(Service\Servico $service)</methodSignature>
      <fullMethod>setService(Service\Servico $service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>UsuarioController</className>
      <methodName>getAction</methodName>
      <methodSignature>getAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>getAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>UsuarioController</className>
      <methodName>postAction</methodName>
      <methodSignature>postAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>postAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>UsuarioController</className>
      <methodName>patchAction</methodName>
      <methodSignature>patchAction(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>patchAction(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>UsuarioController</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>UsuarioController</className>
      <methodName>setService</methodName>
      <methodSignature>setService(Service\User $service)</methodSignature>
      <fullMethod>setService(Service\User $service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>AbstractEntity</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(array $fields = array())</methodSignature>
      <fullMethod>__construct(array $fields = array())</fullMethod>
      <crap>4.02</crap>
      <complexity>4</complexity>
      <coverage>88.89</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>AbstractEntity</className>
      <methodName>generateSetter</methodName>
      <methodSignature>generateSetter($field)</methodSignature>
      <fullMethod>generateSetter($field)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>AbstractEntity</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray()</methodSignature>
      <fullMethod>toArray()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>AbstractMapper</className>
      <methodName>getDb</methodName>
      <methodSignature>getDb()</methodSignature>
      <fullMethod>getDb()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>AbstractMapper</className>
      <methodName>setDb</methodName>
      <methodSignature>setDb(\Dexter\Db\Conn $database)</methodSignature>
      <fullMethod>setDb(\Dexter\Db\Conn $database)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>AbstractCollection</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray()</methodSignature>
      <fullMethod>toArray()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>fetchAll</methodName>
      <methodSignature>fetchAll()</methodSignature>
      <fullMethod>fetchAll()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>fetchById</methodName>
      <methodSignature>fetchById($clienteId)</methodSignature>
      <fullMethod>fetchById($clienteId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>insert</methodName>
      <methodSignature>insert(Entity\Cliente $cliente)</methodSignature>
      <fullMethod>insert(Entity\Cliente $cliente)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>update</methodName>
      <methodSignature>update(Entity\Cliente $cliente)</methodSignature>
      <fullMethod>update(Entity\Cliente $cliente)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>fetchAll</methodName>
      <methodSignature>fetchAll()</methodSignature>
      <fullMethod>fetchAll()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>fetchById</methodName>
      <methodSignature>fetchById($destaqueId)</methodSignature>
      <fullMethod>fetchById($destaqueId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>insert</methodName>
      <methodSignature>insert(Entity\Destaque $destaque)</methodSignature>
      <fullMethod>insert(Entity\Destaque $destaque)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>update</methodName>
      <methodSignature>update(Entity\Destaque $destaque)</methodSignature>
      <fullMethod>update(Entity\Destaque $destaque)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>fetchAll</methodName>
      <methodSignature>fetchAll()</methodSignature>
      <fullMethod>fetchAll()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>fetchById</methodName>
      <methodSignature>fetchById($funcionalidadeId)</methodSignature>
      <fullMethod>fetchById($funcionalidadeId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>insert</methodName>
      <methodSignature>insert(Entity\Funcionalidade $funcionalidade)</methodSignature>
      <fullMethod>insert(Entity\Funcionalidade $funcionalidade)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>update</methodName>
      <methodSignature>update(Entity\Funcionalidade $funcionalidade)</methodSignature>
      <fullMethod>update(Entity\Funcionalidade $funcionalidade)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>fetchAll</methodName>
      <methodSignature>fetchAll()</methodSignature>
      <fullMethod>fetchAll()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>fetchById</methodName>
      <methodSignature>fetchById($mensagemId)</methodSignature>
      <fullMethod>fetchById($mensagemId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>insert</methodName>
      <methodSignature>insert(Entity\Mensagem $mensagem)</methodSignature>
      <fullMethod>insert(Entity\Mensagem $mensagem)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>update</methodName>
      <methodSignature>update(Entity\Mensagem $mensagem)</methodSignature>
      <fullMethod>update(Entity\Mensagem $mensagem)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>fetchAll</methodName>
      <methodSignature>fetchAll()</methodSignature>
      <fullMethod>fetchAll()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>fetchById</methodName>
      <methodSignature>fetchById($servicoId)</methodSignature>
      <fullMethod>fetchById($servicoId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>insert</methodName>
      <methodSignature>insert(Entity\Servico $servico)</methodSignature>
      <fullMethod>insert(Entity\Servico $servico)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>update</methodName>
      <methodSignature>update(Entity\Servico $servico)</methodSignature>
      <fullMethod>update(Entity\Servico $servico)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>fetchAll</methodName>
      <methodSignature>fetchAll()</methodSignature>
      <fullMethod>fetchAll()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>fetchById</methodName>
      <methodSignature>fetchById($userId)</methodSignature>
      <fullMethod>fetchById($userId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>insert</methodName>
      <methodSignature>insert(Entity\User $user)</methodSignature>
      <fullMethod>insert(Entity\User $user)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>update</methodName>
      <methodSignature>update(Entity\User $user)</methodSignature>
      <fullMethod>update(Entity\User $user)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getId</methodName>
      <methodSignature>getId()</methodSignature>
      <fullMethod>getId()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setId</methodName>
      <methodSignature>setId($clienteId)</methodSignature>
      <fullMethod>setId($clienteId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getNome</methodName>
      <methodSignature>getNome()</methodSignature>
      <fullMethod>getNome()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setNome</methodName>
      <methodSignature>setNome($nome)</methodSignature>
      <fullMethod>setNome($nome)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getCpfCnpj</methodName>
      <methodSignature>getCpfCnpj()</methodSignature>
      <fullMethod>getCpfCnpj()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setCpfCnpj</methodName>
      <methodSignature>setCpfCnpj($cpfCnpj)</methodSignature>
      <fullMethod>setCpfCnpj($cpfCnpj)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getTelefone</methodName>
      <methodSignature>getTelefone()</methodSignature>
      <fullMethod>getTelefone()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setTelefone</methodName>
      <methodSignature>setTelefone($telefone)</methodSignature>
      <fullMethod>setTelefone($telefone)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getCelular</methodName>
      <methodSignature>getCelular()</methodSignature>
      <fullMethod>getCelular()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setCelular</methodName>
      <methodSignature>setCelular($celular)</methodSignature>
      <fullMethod>setCelular($celular)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getEmail</methodName>
      <methodSignature>getEmail()</methodSignature>
      <fullMethod>getEmail()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setEmail</methodName>
      <methodSignature>setEmail($email)</methodSignature>
      <fullMethod>setEmail($email)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getCep</methodName>
      <methodSignature>getCep()</methodSignature>
      <fullMethod>getCep()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setCep</methodName>
      <methodSignature>setCep($cep, $error = false)</methodSignature>
      <fullMethod>setCep($cep, $error = false)</fullMethod>
      <crap>3.03</crap>
      <complexity>3</complexity>
      <coverage>85.71</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getEstado</methodName>
      <methodSignature>getEstado()</methodSignature>
      <fullMethod>getEstado()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setEstado</methodName>
      <methodSignature>setEstado($estado)</methodSignature>
      <fullMethod>setEstado($estado)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getBairro</methodName>
      <methodSignature>getBairro()</methodSignature>
      <fullMethod>getBairro()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setBairro</methodName>
      <methodSignature>setBairro($bairro)</methodSignature>
      <fullMethod>setBairro($bairro)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getEndereco</methodName>
      <methodSignature>getEndereco()</methodSignature>
      <fullMethod>getEndereco()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setEndereco</methodName>
      <methodSignature>setEndereco($endereco)</methodSignature>
      <fullMethod>setEndereco($endereco)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getCidade</methodName>
      <methodSignature>getCidade()</methodSignature>
      <fullMethod>getCidade()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setCidade</methodName>
      <methodSignature>setCidade($cidade)</methodSignature>
      <fullMethod>setCidade($cidade)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>getId</methodName>
      <methodSignature>getId()</methodSignature>
      <fullMethod>getId()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>setId</methodName>
      <methodSignature>setId($destaqueId)</methodSignature>
      <fullMethod>setId($destaqueId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>getImagem</methodName>
      <methodSignature>getImagem()</methodSignature>
      <fullMethod>getImagem()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>setImagem</methodName>
      <methodSignature>setImagem($imagem)</methodSignature>
      <fullMethod>setImagem($imagem)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>getTitulo</methodName>
      <methodSignature>getTitulo()</methodSignature>
      <fullMethod>getTitulo()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>setTitulo</methodName>
      <methodSignature>setTitulo($titulo)</methodSignature>
      <fullMethod>setTitulo($titulo)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>getDescricao</methodName>
      <methodSignature>getDescricao()</methodSignature>
      <fullMethod>getDescricao()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>setDescricao</methodName>
      <methodSignature>setDescricao($descricao)</methodSignature>
      <fullMethod>setDescricao($descricao)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>getId</methodName>
      <methodSignature>getId()</methodSignature>
      <fullMethod>getId()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>setId</methodName>
      <methodSignature>setId($funcionalidadeId)</methodSignature>
      <fullMethod>setId($funcionalidadeId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>getImagem</methodName>
      <methodSignature>getImagem()</methodSignature>
      <fullMethod>getImagem()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>setImagem</methodName>
      <methodSignature>setImagem($imagem)</methodSignature>
      <fullMethod>setImagem($imagem)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>getTitulo</methodName>
      <methodSignature>getTitulo()</methodSignature>
      <fullMethod>getTitulo()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>setTitulo</methodName>
      <methodSignature>setTitulo($titulo)</methodSignature>
      <fullMethod>setTitulo($titulo)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>getDescricao</methodName>
      <methodSignature>getDescricao()</methodSignature>
      <fullMethod>getDescricao()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>setDescricao</methodName>
      <methodSignature>setDescricao($descricao)</methodSignature>
      <fullMethod>setDescricao($descricao)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>getId</methodName>
      <methodSignature>getId()</methodSignature>
      <fullMethod>getId()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>setId</methodName>
      <methodSignature>setId($mensagemId)</methodSignature>
      <fullMethod>setId($mensagemId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>getNome</methodName>
      <methodSignature>getNome()</methodSignature>
      <fullMethod>getNome()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>setNome</methodName>
      <methodSignature>setNome($nome)</methodSignature>
      <fullMethod>setNome($nome)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>getEmail</methodName>
      <methodSignature>getEmail()</methodSignature>
      <fullMethod>getEmail()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>setEmail</methodName>
      <methodSignature>setEmail($email)</methodSignature>
      <fullMethod>setEmail($email)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>getAssunto</methodName>
      <methodSignature>getAssunto()</methodSignature>
      <fullMethod>getAssunto()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>setAssunto</methodName>
      <methodSignature>setAssunto($assunto)</methodSignature>
      <fullMethod>setAssunto($assunto)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>getMensagem</methodName>
      <methodSignature>getMensagem()</methodSignature>
      <fullMethod>getMensagem()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>setMensagem</methodName>
      <methodSignature>setMensagem($mensagem)</methodSignature>
      <fullMethod>setMensagem($mensagem)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>getId</methodName>
      <methodSignature>getId()</methodSignature>
      <fullMethod>getId()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>setId</methodName>
      <methodSignature>setId($servicoId)</methodSignature>
      <fullMethod>setId($servicoId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>getImagem</methodName>
      <methodSignature>getImagem()</methodSignature>
      <fullMethod>getImagem()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>setImagem</methodName>
      <methodSignature>setImagem($imagem)</methodSignature>
      <fullMethod>setImagem($imagem)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>getTitulo</methodName>
      <methodSignature>getTitulo()</methodSignature>
      <fullMethod>getTitulo()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>setTitulo</methodName>
      <methodSignature>setTitulo($titulo)</methodSignature>
      <fullMethod>setTitulo($titulo)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>getDescricao</methodName>
      <methodSignature>getDescricao()</methodSignature>
      <fullMethod>getDescricao()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>setDescricao</methodName>
      <methodSignature>setDescricao($descricao)</methodSignature>
      <fullMethod>setDescricao($descricao)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>getShowHome</methodName>
      <methodSignature>getShowHome()</methodSignature>
      <fullMethod>getShowHome()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>setShowHome</methodName>
      <methodSignature>setShowHome($showHome)</methodSignature>
      <fullMethod>setShowHome($showHome)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>getId</methodName>
      <methodSignature>getId()</methodSignature>
      <fullMethod>getId()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>setId</methodName>
      <methodSignature>setId($userId)</methodSignature>
      <fullMethod>setId($userId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>getLogin</methodName>
      <methodSignature>getLogin()</methodSignature>
      <fullMethod>getLogin()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>setLogin</methodName>
      <methodSignature>setLogin($login)</methodSignature>
      <fullMethod>setLogin($login)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>getSenha</methodName>
      <methodSignature>getSenha()</methodSignature>
      <fullMethod>getSenha()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>setSenha</methodName>
      <methodSignature>setSenha($senha)</methodSignature>
      <fullMethod>setSenha($senha)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getCliente</methodName>
      <methodSignature>getCliente($clienteId)</methodSignature>
      <fullMethod>getCliente($clienteId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getClientes</methodName>
      <methodSignature>getClientes()</methodSignature>
      <fullMethod>getClientes()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>save</methodName>
      <methodSignature>save(array $dados)</methodSignature>
      <fullMethod>save(array $dados)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>93.94</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>getClienteMapper</methodName>
      <methodSignature>getClienteMapper()</methodSignature>
      <fullMethod>getClienteMapper()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Cliente</className>
      <methodName>setClienteMapper</methodName>
      <methodSignature>setClienteMapper(DataMapper\Cliente $mapper)</methodSignature>
      <fullMethod>setClienteMapper(DataMapper\Cliente $mapper)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Contato</className>
      <methodName>getMensagemMapper</methodName>
      <methodSignature>getMensagemMapper()</methodSignature>
      <fullMethod>getMensagemMapper()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Contato</className>
      <methodName>setMensagemMapper</methodName>
      <methodSignature>setMensagemMapper(DataMapper\Mensagem $mapper)</methodSignature>
      <fullMethod>setMensagemMapper(DataMapper\Mensagem $mapper)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Contato</className>
      <methodName>save</methodName>
      <methodSignature>save(array $dados)</methodSignature>
      <fullMethod>save(array $dados)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>getDestaque</methodName>
      <methodSignature>getDestaque($destaqueId)</methodSignature>
      <fullMethod>getDestaque($destaqueId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>getDestaques</methodName>
      <methodSignature>getDestaques()</methodSignature>
      <fullMethod>getDestaques()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>save</methodName>
      <methodSignature>save(array $dados)</methodSignature>
      <fullMethod>save(array $dados)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>getDestaqueMapper</methodName>
      <methodSignature>getDestaqueMapper()</methodSignature>
      <fullMethod>getDestaqueMapper()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Destaque</className>
      <methodName>setDestaqueMapper</methodName>
      <methodSignature>setDestaqueMapper(DataMapper\Destaque $mapper)</methodSignature>
      <fullMethod>setDestaqueMapper(DataMapper\Destaque $mapper)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Estado</className>
      <methodName>getEstados</methodName>
      <methodSignature>getEstados()</methodSignature>
      <fullMethod>getEstados()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>getFuncionalidade</methodName>
      <methodSignature>getFuncionalidade($funcionalidadeId)</methodSignature>
      <fullMethod>getFuncionalidade($funcionalidadeId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>getFuncionalidades</methodName>
      <methodSignature>getFuncionalidades()</methodSignature>
      <fullMethod>getFuncionalidades()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>save</methodName>
      <methodSignature>save(array $dados)</methodSignature>
      <fullMethod>save(array $dados)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>getFuncionalidadeMapper</methodName>
      <methodSignature>getFuncionalidadeMapper()</methodSignature>
      <fullMethod>getFuncionalidadeMapper()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Funcionalidade</className>
      <methodName>setFuncionalidadeMapper</methodName>
      <methodSignature>setFuncionalidadeMapper(DataMapper\Funcionalidade $mapper)</methodSignature>
      <fullMethod>setFuncionalidadeMapper(DataMapper\Funcionalidade $mapper)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>getMensagem</methodName>
      <methodSignature>getMensagem($mensagemId)</methodSignature>
      <fullMethod>getMensagem($mensagemId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>getMensagens</methodName>
      <methodSignature>getMensagens()</methodSignature>
      <fullMethod>getMensagens()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>save</methodName>
      <methodSignature>save(array $dados)</methodSignature>
      <fullMethod>save(array $dados)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>getMensagemMapper</methodName>
      <methodSignature>getMensagemMapper()</methodSignature>
      <fullMethod>getMensagemMapper()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Mensagem</className>
      <methodName>setmensagemMapper</methodName>
      <methodSignature>setmensagemMapper(DataMapper\Mensagem $mapper)</methodSignature>
      <fullMethod>setmensagemMapper(DataMapper\Mensagem $mapper)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>getServico</methodName>
      <methodSignature>getServico($servicoId)</methodSignature>
      <fullMethod>getServico($servicoId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>getAllServicos</methodName>
      <methodSignature>getAllServicos()</methodSignature>
      <fullMethod>getAllServicos()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>getServicos</methodName>
      <methodSignature>getServicos($showHome)</methodSignature>
      <fullMethod>getServicos($showHome)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>save</methodName>
      <methodSignature>save(array $dados)</methodSignature>
      <fullMethod>save(array $dados)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>getServicoMapper</methodName>
      <methodSignature>getServicoMapper()</methodSignature>
      <fullMethod>getServicoMapper()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Servico</className>
      <methodName>setServicoMapper</methodName>
      <methodSignature>setServicoMapper(DataMapper\Servico $mapper)</methodSignature>
      <fullMethod>setServicoMapper(DataMapper\Servico $mapper)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Strategy\LoginStrategy $loginStrategy = null)</methodSignature>
      <fullMethod>__construct(Strategy\LoginStrategy $loginStrategy = null)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>login</methodName>
      <methodSignature>login($user, $pass)</methodSignature>
      <fullMethod>login($user, $pass)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>logout</methodName>
      <methodSignature>logout()</methodSignature>
      <fullMethod>logout()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>getUser</methodName>
      <methodSignature>getUser($userId = null)</methodSignature>
      <fullMethod>getUser($userId = null)</fullMethod>
      <crap>2.03</crap>
      <complexity>2</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>getUsers</methodName>
      <methodSignature>getUsers()</methodSignature>
      <fullMethod>getUsers()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>save</methodName>
      <methodSignature>save(array $dados)</methodSignature>
      <fullMethod>save(array $dados)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>getUserMapper</methodName>
      <methodSignature>getUserMapper()</methodSignature>
      <fullMethod>getUserMapper()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>User</className>
      <methodName>setUserMapper</methodName>
      <methodSignature>setUserMapper(DataMapper\User $mapper)</methodSignature>
      <fullMethod>setUserMapper(DataMapper\User $mapper)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>LoginDatabase</className>
      <methodName>getDb</methodName>
      <methodSignature>getDb()</methodSignature>
      <fullMethod>getDb()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>LoginDatabase</className>
      <methodName>setDb</methodName>
      <methodSignature>setDb(\Dexter\Db\Conn $database)</methodSignature>
      <fullMethod>setDb(\Dexter\Db\Conn $database)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>LoginDatabase</className>
      <methodName>login</methodName>
      <methodSignature>login($user, $pass)</methodSignature>
      <fullMethod>login($user, $pass)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Database</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Conn $database, $table, $userColumn, $hashColumn)</methodSignature>
      <fullMethod>__construct(Conn $database, $table, $userColumn, $hashColumn)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Database</className>
      <methodName>login</methodName>
      <methodSignature>login($user, $password)</methodSignature>
      <fullMethod>login($user, $password)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Basic</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Algo $algo, $server)</methodSignature>
      <fullMethod>__construct(Algo $algo, $server)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Basic</className>
      <methodName>login</methodName>
      <methodSignature>login($controller, $action)</methodSignature>
      <fullMethod>login($controller, $action)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Basic</className>
      <methodName>acl</methodName>
      <methodSignature>acl($controller, $action)</methodSignature>
      <fullMethod>acl($controller, $action)</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Basic</className>
      <methodName>presentBasic</methodName>
      <methodSignature>presentBasic()</methodSignature>
      <fullMethod>presentBasic()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Accept</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($server, array $available)</methodSignature>
      <fullMethod>__construct($server, array $available)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Accept</className>
      <methodName>getFormat</methodName>
      <methodSignature>getFormat()</methodSignature>
      <fullMethod>getFormat()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Accept</className>
      <methodName>parse</methodName>
      <methodSignature>parse()</methodSignature>
      <fullMethod>parse()</fullMethod>
      <crap>7.04</crap>
      <complexity>7</complexity>
      <coverage>90.63</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ContentType</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($server)</methodSignature>
      <fullMethod>__construct($server)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ContentType</className>
      <methodName>getFormat</methodName>
      <methodSignature>getFormat()</methodSignature>
      <fullMethod>getFormat()</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Converter</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($format, ConverterFactory $converterFactory, $type)</methodSignature>
      <fullMethod>__construct($format, ConverterFactory $converterFactory, $type)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Converter</className>
      <methodName>convert</methodName>
      <methodSignature>convert($content)</methodSignature>
      <fullMethod>convert($content)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>ConverterFactory</className>
      <methodName>create</methodName>
      <methodSignature>create($format)</methodSignature>
      <fullMethod>create($format)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Json</className>
      <methodName>decode</methodName>
      <methodSignature>decode($content)</methodSignature>
      <fullMethod>decode($content)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Json</className>
      <methodName>encode</methodName>
      <methodSignature>encode($content)</methodSignature>
      <fullMethod>encode($content)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Xml</className>
      <methodName>decode</methodName>
      <methodSignature>decode($content)</methodSignature>
      <fullMethod>decode($content)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Xml</className>
      <methodName>encode</methodName>
      <methodSignature>encode($content)</methodSignature>
      <fullMethod>encode($content)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Xml</className>
      <methodName>anonymous function</methodName>
      <methodSignature>anonymous function ($content, &amp;$xml) use (&amp;$arrayToXml)</methodSignature>
      <fullMethod>anonymous function ($content, &amp;$xml) use (&amp;$arrayToXml)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Conn</className>
      <methodName>setConfig</methodName>
      <methodSignature>setConfig(array $config)</methodSignature>
      <fullMethod>setConfig(array $config)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Conn</className>
      <methodName>doConnect</methodName>
      <methodSignature>doConnect()</methodSignature>
      <fullMethod>doConnect()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Conn</className>
      <methodName>__call</methodName>
      <methodSignature>__call($name, array $args)</methodSignature>
      <fullMethod>__call($name, array $args)</fullMethod>
      <crap>4.68</crap>
      <complexity>3</complexity>
      <coverage>42.86</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Conn</className>
      <methodName>fetchAll</methodName>
      <methodSignature>fetchAll($query, array $replacements = array())</methodSignature>
      <fullMethod>fetchAll($query, array $replacements = array())</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Conn</className>
      <methodName>insert</methodName>
      <methodSignature>insert($query, array $replacements)</methodSignature>
      <fullMethod>insert($query, array $replacements)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Conn</className>
      <methodName>update</methodName>
      <methodSignature>update($query, array $replacements)</methodSignature>
      <fullMethod>update($query, array $replacements)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Conn</className>
      <methodName>delete</methodName>
      <methodSignature>delete($query, array $replacements = array())</methodSignature>
      <fullMethod>delete($query, array $replacements = array())</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Factory</className>
      <methodName>getDb</methodName>
      <methodSignature>getDb()</methodSignature>
      <fullMethod>getDb()</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Header</className>
      <methodName>send</methodName>
      <methodSignature>send(array $headers)</methodSignature>
      <fullMethod>send(array $headers)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Stream</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($file, $mode = 'a', Stream\Stream $stream = null)</methodSignature>
      <fullMethod>__construct($file, $mode = 'a', Stream\Stream $stream = null)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Stream</className>
      <methodName>write</methodName>
      <methodSignature>write($data)</methodSignature>
      <fullMethod>write($data)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Stream</className>
      <methodName>open</methodName>
      <methodSignature>open($file, $mode = 'a')</methodSignature>
      <fullMethod>open($file, $mode = 'a')</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Stream</className>
      <methodName>close</methodName>
      <methodSignature>close()</methodSignature>
      <fullMethod>close()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Stream</className>
      <methodName>write</methodName>
      <methodSignature>write($data)</methodSignature>
      <fullMethod>write($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Stream</className>
      <methodName>getFile</methodName>
      <methodSignature>getFile()</methodSignature>
      <fullMethod>getFile()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Log</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($name, $data, \DateTime $dateTime = null)</methodSignature>
      <fullMethod>__construct($name, $data, \DateTime $dateTime = null)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Log</className>
      <methodName>__toString</methodName>
      <methodSignature>__toString()</methodSignature>
      <fullMethod>__toString()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Logger</className>
      <methodName>addAdapter</methodName>
      <methodSignature>addAdapter(Adapters\Adapter $adapter)</methodSignature>
      <fullMethod>addAdapter(Adapters\Adapter $adapter)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Logger</className>
      <methodName>log</methodName>
      <methodSignature>log(Log $log)</methodSignature>
      <fullMethod>log(Log $log)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Dispatcher</className>
      <methodName>dispatch</methodName>
      <methodSignature>dispatch(
        RouteInterface      $route,
        RequestInterface    $request,
        ResponseInterface   $response
    )</methodSignature>
      <fullMethod>dispatch(
        RouteInterface      $route,
        RequestInterface    $request,
        ResponseInterface   $response
    )</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>FrontController</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(
        RouterInterface     $router,
        DispatcherInterface $dispatcher
    )</methodSignature>
      <fullMethod>__construct(
        RouterInterface     $router,
        DispatcherInterface $dispatcher
    )</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>FrontController</className>
      <methodName>run</methodName>
      <methodSignature>run(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>run(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Request</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Converter $converter)</methodSignature>
      <fullMethod>__construct(Converter $converter)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Request</className>
      <methodName>getUri</methodName>
      <methodSignature>getUri()</methodSignature>
      <fullMethod>getUri()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Request</className>
      <methodName>getParam</methodName>
      <methodSignature>getParam($param, $default = null)</methodSignature>
      <fullMethod>getParam($param, $default = null)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Request</className>
      <methodName>getParams</methodName>
      <methodSignature>getParams()</methodSignature>
      <fullMethod>getParams()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Request</className>
      <methodName>doParseParams</methodName>
      <methodSignature>doParseParams()</methodSignature>
      <fullMethod>doParseParams()</fullMethod>
      <crap>9.59</crap>
      <complexity>8</complexity>
      <coverage>70.83</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Request</className>
      <methodName>isPost</methodName>
      <methodSignature>isPost()</methodSignature>
      <fullMethod>isPost()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Request</className>
      <methodName>getHttpMethod</methodName>
      <methodSignature>getHttpMethod()</methodSignature>
      <fullMethod>getHttpMethod()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Request</className>
      <methodName>CORS</methodName>
      <methodSignature>CORS()</methodSignature>
      <fullMethod>CORS()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Response</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Converter $converter)</methodSignature>
      <fullMethod>__construct(Converter $converter)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Response</className>
      <methodName>addHeader</methodName>
      <methodSignature>addHeader($header)</methodSignature>
      <fullMethod>addHeader($header)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Response</className>
      <methodName>addHeaders</methodName>
      <methodSignature>addHeaders(array $headers)</methodSignature>
      <fullMethod>addHeaders(array $headers)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Response</className>
      <methodName>getHeaders</methodName>
      <methodSignature>getHeaders()</methodSignature>
      <fullMethod>getHeaders()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Response</className>
      <methodName>setContent</methodName>
      <methodSignature>setContent($content)</methodSignature>
      <fullMethod>setContent($content)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Response</className>
      <methodName>send</methodName>
      <methodSignature>send()</methodSignature>
      <fullMethod>send()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Response</className>
      <methodName>getHeaderSender</methodName>
      <methodSignature>getHeaderSender()</methodSignature>
      <fullMethod>getHeaderSender()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Response</className>
      <methodName>setHeaderSender</methodName>
      <methodSignature>setHeaderSender(\Dexter\Http\Header $headerSender)</methodSignature>
      <fullMethod>setHeaderSender(\Dexter\Http\Header $headerSender)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Route</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($pattern, $exec)</methodSignature>
      <fullMethod>__construct($pattern, $exec)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Route</className>
      <methodName>match</methodName>
      <methodSignature>match(RequestInterface $request)</methodSignature>
      <fullMethod>match(RequestInterface $request)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Route</className>
      <methodName>run</methodName>
      <methodSignature>run(array $args)</methodSignature>
      <fullMethod>run(array $args)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Route</className>
      <methodName>__get</methodName>
      <methodSignature>__get($name)</methodSignature>
      <fullMethod>__get($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Router</className>
      <methodName>addRoute</methodName>
      <methodSignature>addRoute(RouteInterface $route)</methodSignature>
      <fullMethod>addRoute(RouteInterface $route)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Router</className>
      <methodName>addRoutes</methodName>
      <methodSignature>addRoutes(array $routes)</methodSignature>
      <fullMethod>addRoutes(array $routes)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Router</className>
      <methodName>getRoutes</methodName>
      <methodSignature>getRoutes()</methodSignature>
      <fullMethod>getRoutes()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Router</className>
      <methodName>route</methodName>
      <methodSignature>route(RequestInterface $request, ResponseInterface $response)</methodSignature>
      <fullMethod>route(RequestInterface $request, ResponseInterface $response)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Singleton</className>
      <methodName>getInstance</methodName>
      <methodSignature>getInstance()</methodSignature>
      <fullMethod>getInstance()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Singleton</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>Singleton</className>
      <methodName>__clone</methodName>
      <methodSignature>__clone()</methodSignature>
      <fullMethod>__clone()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerForInt</methodName>
      <methodSignature>providerForInt()</methodSignature>
      <fullMethod>providerForInt()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerForString</methodName>
      <methodSignature>providerForString()</methodSignature>
      <fullMethod>providerForString()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerForImagens</methodName>
      <methodSignature>providerForImagens()</methodSignature>
      <fullMethod>providerForImagens()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerForBigString50</methodName>
      <methodSignature>providerForBigString50()</methodSignature>
      <fullMethod>providerForBigString50()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerYN</methodName>
      <methodSignature>providerYN()</methodSignature>
      <fullMethod>providerYN()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerForTelefone</methodName>
      <methodSignature>providerForTelefone()</methodSignature>
      <fullMethod>providerForTelefone()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerForCelular</methodName>
      <methodSignature>providerForCelular()</methodSignature>
      <fullMethod>providerForCelular()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerForEmail</methodName>
      <methodSignature>providerForEmail()</methodSignature>
      <fullMethod>providerForEmail()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerForCep</methodName>
      <methodSignature>providerForCep()</methodSignature>
      <fullMethod>providerForCep()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package/>
      <className>TestProvider</className>
      <methodName>providerForEstado</methodName>
      <methodSignature>providerForEstado()</methodSignature>
      <fullMethod>providerForEstado()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
